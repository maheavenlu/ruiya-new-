@model ruiya.Models.DBSystem.DBSystemUsers

@{
    ViewBag.Title = "Edit";
}

<html>
<head>
    <link rel="stylesheet" type="text/css" href="~/Content/DBSystem/Css/bootstrap.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/DBSystem/Css/bootstrap-responsive.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/DBSystem/Css/style.css" />
    <script type="text/javascript" src="~/Content/DBSystem/Js/jquery.js"></script>
    <script type="text/javascript" src="~/Content/DBSystem/Js/jquery.sorted.js"></script>
    <script type="text/javascript" src="~/Content/DBSystem/Js/bootstrap.js"></script>
    <script type="text/javascript" src="~/Content/DBSystem/Js/ckform.js"></script>
    <script type="text/javascript" src="~/Content/DBSystem/Js/common.js"></script>
    <script src="~/Content/DBSystem/Js/base64.js"></script>
    <script src="~/Content/DBSystem/Js/jquery.js"></script>
    <script type="text/javascript">
        window.onload = function () {
            /*************************
            *创建Base64对象，用于对数据的加密解密
            *获取输入password 和 username在提交时进行加密，
            ***************************/
            var base64 = new Base64();
            /*var Oform = document.getElementsByTagName("form")[0];
            Oform.onsubmit = function () {
                var password = document.getElementById("password").value;
                var username = document.getElementById("username").value;
                document.getElementById("password").value = base64.encode(password);
                document.getElementById("username").value = base64.encode(username);
                //alert(pass + document.getElementById("password").value);
            }*/
            var Oform = document.getElementsByTagName("form")[0];
            Oform.onsubmit = function () {
                $("#password").val(base64.encode($("#password").val()));
                $("#username").val(base64.encode($("#username").val()));
            }
        }
    </script>
    <style>
        #create {
            margin: 50px;
        }
    </style>
</head>
<body>
    <h2>编辑用户</h2>
    <form method="post" id="uform">
        @Html.AntiForgeryToken()

        <div class="form-horizontal" id="create">
            <h4>瑞亚后台管理用户</h4>
            <hr />
            <span style="margin-left:3%;">权限说明:&nbsp;0/无权限&nbsp;&nbsp;&nbsp;&nbsp;1/只读&nbsp;&nbsp;&nbsp;&nbsp;2/读写、建&nbsp;&nbsp;&nbsp;&nbsp;3/读写、建、删&nbsp;&nbsp;&nbsp;&nbsp;4/最高权限(可以用户操作) </span>
            <br>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            <div class="form-group">
                <span>用户名：</span>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.username, new { htmlAttributes = new { @readOnly = "readOnly", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.password, new { htmlAttributes = new { @readOnly = "readOnly",@class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            <div class="form-group">
                <span>后台管理等级：</span>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DBSystemLevel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DBSystemLevel, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            <div class="form-group">
                <span>全家乐网站管理等级：</span>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.happyFamilyLevel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.happyFamilyLevel, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            <div class="form-group">
                <span>瑞亚官网管理等级：</span>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ruiyaLevel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ruiyaLevel, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="保存" class="btn btn-warning form-group" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <button type="button" class="btn btn-danger" onclick="location.href = '/DBSystem/DBSystem/User'">@Html.ActionLink("返回", "Index")</button>
                </div>
            </div>
        </div>
    </form>
</body>
</html>
